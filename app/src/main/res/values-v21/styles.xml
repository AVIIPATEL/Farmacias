<resources>

    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
    <!-- Customize your theme here. -->
    <!-- no longer neccesary since not applying content activity transitions but overridePendingTransitions-->
    <item name="colorPrimary">@color/colorPrimary</item>
    <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
    <item name="colorAccent">@color/colorAccent</item>
    <item name="android:windowBackground">@color/white</item>
    <item name="snackbarBuilderStyle">@style/SampleSnackbarStyle</item>
    <item name="android:windowContentTransitions">true</item>


    </style>

    <style name="AppTheme.NoActionBar">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
        <!--if false it draws the status bar with color black-->
        <item name="android:windowDrawsSystemBarBackgrounds">true</item>
        <!--transparent so that the drawer can be seen behind the status bar
          <item name="android:statusBarColor">@android:color/transparent</item>
          It appears a shadow effect at the bottom of the statusbar, don't know why: by commenting
          this line can get rid of that effect. But there is a effectiver method, that is set to
          false the fitsystemwindows in Coordinatorlayout in activity_main.xml
        -->
        <item name="android:statusBarColor">@android:color/transparent</item>
        <item name="android:colorControlHighlight">@color/colorAccent</item>
        <!--enable content transitions-->
        <item name="android:windowContentTransitions">true</item>


    </style>




    <style name="NavigationViewTheme" parent="AppTheme">
        <item name="textAppearanceListItem">@style/TextAppearance.AppCompat.Body2</item>
    </style>
</resources>
